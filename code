import pandas as pd 
import numpy as np
from libtiff import TIFF 
import matplotlib.pyplot as plt
from sklearn import model_selection
from sklearn.linear_model import Ridge,RidgeCV
from collections import Counter 
import os
import re 
import scipy.optimize
import sympy as sp 
from sklearn.metrics import mean_squared_error
import math
import statsmodels.api as sm
#the list used to store image name：satellite_year ,后续用于列名更改
file_path = 'E:\\tiff_picture\\DSPM_OLS'
file_pathh = r'E:\tiff_picture\DSPM_OLS'
NTL_image_file = os.listdir(file_pathh)
satelline_year = []
for i in NTL_image_file:
    name = re.findall('(.{7}).v4',i)
    satelline_year.append(name)
satelline_year = np.squeeze(satelline_year).tolist()
print(satelline_year)
print(NTL_image_file) 
F18 = ['F182011','F182012','F182013']
IMG = []
for i in range(len(NTL_image_file)):
    if str(satelline_year[i]) == 'F182010':
        locals()['IMG'+satelline_year[i]] = TIFF.open(os.path.join(file_path,satelline_year[i]+".v4d_web.stable_lights.avg_vis.tif"))
        IMG.append(i)
    elif satelline_year[i] in F18:
        locals()['IMG'+satelline_year[i]] = TIFF.open(os.path.join(file_path,satelline_year[i]+".v4c_web.stable_lights.avg_vis.tif"))
        IMG.append(i)
    elif satelline_year[i] =='F152000':
        locals()['IMG'+satelline_year[i]] = TIFF.open(os.path.join(file_path,satelline_year[i]+".v4b_web.stable_lights.avg_vis.tif"))
    else:
        locals()['IMG'+satelline_year[i]] = TIFF.open(os.path.join(file_path,satelline_year[i]+".v4b_web.stable_lights.avg_vis.tif"))
        IMG.append(i)
###
#DNt-1>DNt DNt = DNt-1
#DNt-1<DNt DNt=DNt
#DNt=0 DNt = 0
#use the front satellite image(t-1) to reject later image(t). DN means the piexl in the same position.
